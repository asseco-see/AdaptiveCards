{
	"id": "data-set",
	"version": "0.1",
	"elementPrefix": "",
	"propertyPrefix": "asseco",
	"contributes": {
		"definitions": {
			"PreferredRenderType": {
				"classType": "Enum",
				"type": "PreferredRenderType",
				"values": ["client", "server"]
			},
			"AdaptiveCard": {
				"properties": {
					"dataset": {
						"type": "DataSet",
						"required": false,
						"description": "DataSet for card"
					}
				}
			},
			"AdaptiveComponent": {
				"properties": {
					"dataset": {
						"type": "DataSet",
						"required": false,
						"description": "DataSet for component"
					}
				}
			},
			"ParamType": {
				"classType": "Enum",
				"type": "ParamType",
				"default": "query",
				"values": ["query", "header", "route"]
			},
			"AuthenticationType": {
				"classType": "Enum",
				"type": "AuthenticationType",
				"values": ["client", "server"]
			},
			"DataSetBindingType": {
				"classType": "Enum",
				"type": "DataSetBindingType",
				"values": ["inherited", "client", "server"]
			},
			"Param": {
				"classType": "Class",
				"type": "Param",
				"properties": {
					"name": {
						"type": "string",
						"description": "Parameter name",
						"required": true,
						"version": "0.1"
					},
					"type": {
						"type": "ParamType",
						"description": "Parameter type",
						"required": true,
						"version": "0.1"
					},
					"value": {
						"type": "string",
						"description": "Parameter value",
						"required": true,
						"version": "0.1"
					},
					"required": {
						"type": "boolean",
						"description": "Is parameter required to evaluate data source",
						"version": "0.1"
					}
				}
			},
			"DataSet": {
				"classType": "Class",
				"type": "DataSet",
				"description": "Set of data sources",
				"properties": {
					"binding": {
						"type": "DataSetBindingType",
						"description": "Is DataSet binding client or server side",
						"required": true,
						"version": "0.1",
						"default": "inherited"
					},
					"dataSources": {
						"type": "DataSource[]",
						"description": "Data sources",
						"required": true,
						"version": "0.1"
					}
				}
			},
			"DataSource.GraphQL": {
				"classType": "Class",
				"extends": "DataSource",
				"type": "DataSource.GraphQL",
				"description": "GraphQL Data Source",
				"properties": {
					"uri": {
						"type": "uri",
						"description": "URI to data service",
						"required": true,
						"version": "0.1"
					},
					"query": {
						"type": "string",
						"description": "Query for GraphQL service",
						"required": true,
						"version": "0.1"
					},
					"isAuthenticated": {
						"type": "boolean",
						"description": "Whether data source service needs authentication.",
						"version": "0.1"
					},
					"authenticationType": {
						"type": "AuthenticationType",
						"description": "Type of authentication. Can be client or server. Defaults to client",
						"version": "0.1",
						"default": "client"
					}
				}
			},
			"DataSource.REST": {
				"classType": "Class",
				"extends": "DataSource",
				"type": "DataSource.REST",
				"description": "REST DataSource",
				"properties": {
					"uri": {
						"type": "uri",
						"description": "URI to data service",
						"required": true,
						"version": "0.1"
					},
					"method": {
						"type": "string",
						"description": "Data service method. For REST endpoint is route",
						"required": true,
						"version": "0.1"
					},
					"isAuthenticated": {
						"type": "boolean",
						"description": "Whether data source service needs authentication.",
						"version": "0.1"
					},
					"authenticationType": {
						"type": "AuthenticationType",
						"description": "Type of authentication. Can be client or server. Defaults to client",
						"version": "0.1",
						"default": "client"
					},
					"isPageable": {
						"type": "boolean",
						"description": "Returns if result of service call is pageable",
						"default": false,
						"version": "0.1"
					},
					"isSortable": {
						"type": "string",
						"description": "Returns if result of service call is sortable",
						"default": false,
						"version": "0.1"
					},
					"params": {
						"type": "Param[]",
						"description": "List of parameters for service call",
						"version": "0.1"
					},
					"body": {
						"type": "object",
						"description": "Body for POST, PUT, PATCH methods",
						"version": "0.1"
					}
				}
			},
			"DataSource": {
				"description": "Expresses an enum value",
				"anyOf": [
					{
						"type": "DataSource.GraphQL",
						"description": "GraphQL Data Source"
					},
					{
						"type": "DataSource.REST",
						"description": "REST Data Source"
					}
				]
			}
		}
	},
	"hostConfig": {
		"properties": {
			"bind": {
				"type": "PreferredRenderType",
				"description": "Preferred render type",
				"version": "0.1",
				"default": "client"
			}
		}
	}
}
